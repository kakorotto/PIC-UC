

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Nov 25 00:11:27 2012

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text254,local,class=CODE,delta=2
    13                           	psect	text263,local,class=CODE,delta=2
    14                           	psect	pa_nodes,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  000A                     	;#
    17                           
    18                           	psect	config
    19  2007  FF72               	dw	65394	;#
    20                           
    21                           	psect	idataBANK0
    22  053B                     __pidataBANK0:	
    23                           
    24                           ;initializer for _CustomCharacter1
    25  053B  3404               	retlw	4
    26  053C  3404               	retlw	4
    27  053D  3404               	retlw	4
    28  053E  3404               	retlw	4
    29  053F  3415               	retlw	21
    30  0540  340E               	retlw	14
    31  0541  3404               	retlw	4
    32  0542  3400               	retlw	0
    33                           
    34                           ;initializer for _CustomCharacter2
    35  0543  3407               	retlw	7
    36  0544  340D               	retlw	13
    37  0545  3417               	retlw	23
    38  0546  3410               	retlw	16
    39  0547  3417               	retlw	23
    40  0548  340D               	retlw	13
    41  0549  3407               	retlw	7
    42  054A  3400               	retlw	0
    43                           
    44                           ;initializer for _CustomCharacter3
    45  054B  341F               	retlw	31
    46  054C  341F               	retlw	31
    47  054D  3412               	retlw	18
    48  054E  3404               	retlw	4
    49  054F  3409               	retlw	9
    50  0550  3410               	retlw	16
    51  0551  341F               	retlw	31
    52  0552  3400               	retlw	0
    53                           
    54                           ;initializer for _CustomCharacter4
    55  0553  341F               	retlw	31
    56  0554  341F               	retlw	31
    57  0555  3409               	retlw	9
    58  0556  3404               	retlw	4
    59  0557  3412               	retlw	18
    60  0558  3401               	retlw	1
    61  0559  341F               	retlw	31
    62  055A  3400               	retlw	0
    63                           
    64                           ;initializer for _CustomCharacter5
    65  055B  3404               	retlw	4
    66  055C  3404               	retlw	4
    67  055D  3404               	retlw	4
    68  055E  3404               	retlw	4
    69  055F  3415               	retlw	21
    70  0560  340E               	retlw	14
    71  0561  3404               	retlw	4
    72  0562  3400               	retlw	0
    73                           
    74                           ;initializer for _CustomCharacter6
    75  0563  3404               	retlw	4
    76  0564  340E               	retlw	14
    77  0565  3415               	retlw	21
    78  0566  3404               	retlw	4
    79  0567  3404               	retlw	4
    80  0568  3404               	retlw	4
    81  0569  3404               	retlw	4
    82  056A  3400               	retlw	0
    83                           
    84                           ;initializer for _CustomCharacter7
    85  056B  3404               	retlw	4
    86  056C  3404               	retlw	4
    87  056D  3404               	retlw	4
    88  056E  3404               	retlw	4
    89  056F  3415               	retlw	21
    90  0570  340E               	retlw	14
    91  0571  3404               	retlw	4
    92  0572  3400               	retlw	0
    93                           
    94                           ;initializer for _CustomCharacter8
    95  0573  3404               	retlw	4
    96  0574  340E               	retlw	14
    97  0575  3415               	retlw	21
    98  0576  3404               	retlw	4
    99  0577  3404               	retlw	4
   100  0578  3404               	retlw	4
   101  0579  3404               	retlw	4
   102  057A  3400               	retlw	0
   103  0030                     _RB0	set	48
   104  0031                     _RB1	set	49
   105  0032                     _RB2	set	50
   106  0034                     _RB4	set	52
   107  0035                     _RB5	set	53
   108  0036                     _RB6	set	54
   109  0037                     _RB7	set	55
   110  0430                     _TRISB0	set	1072
   111  0431                     _TRISB1	set	1073
   112  0432                     _TRISB2	set	1074
   113  0434                     _TRISB4	set	1076
   114  0435                     _TRISB5	set	1077
   115  0436                     _TRISB6	set	1078
   116  0437                     _TRISB7	set	1079
   117                           
   118                           	psect	strings
   119  0003                     __pstrings:	
   120  0003                     stringtab:	
   121                           ;	global	stringdir,stringtab,__stringbase
   122                           
   123  0003                     stringcode:	
   124                           ;	String table - string pointers are 1 byte each
   125                           
   126  0003                     stringdir:	
   127  0003  3000               	movlw	high stringdir
   128  0004  008A               	movwf	10
   129  0005  0804               	movf	4,w
   130  0006  0A84               	incf	4,f
   131  0007  0782               	addwf	2,f
   132  0008                     __stringbase:	
   133  0008  3400               	retlw	0
   134  0009                     STR_1:	
   135  0009  3473               	retlw	115	;'s'
   136  000A  3461               	retlw	97	;'a'
   137  000B  3465               	retlw	101	;'e'
   138  000C  3465               	retlw	101	;'e'
   139  000D  3464               	retlw	100	;'d'
   140  000E  3473               	retlw	115	;'s'
   141  000F  346F               	retlw	111	;'o'
   142  0010  346C               	retlw	108	;'l'
   143  0011  3475               	retlw	117	;'u'
   144  0012  3474               	retlw	116	;'t'
   145  0013  3469               	retlw	105	;'i'
   146  0014  346F               	retlw	111	;'o'
   147  0015  346E               	retlw	110	;'n'
   148  0016  3473               	retlw	115	;'s'
   149  0017  342E               	retlw	46	;'.'
   150  0018  3462               	retlw	98	;'b'
   151  0019  346C               	retlw	108	;'l'
   152  001A  346F               	retlw	111	;'o'
   153  001B  3467               	retlw	103	;'g'
   154  001C  3473               	retlw	115	;'s'
   155  001D  3470               	retlw	112	;'p'
   156  001E  346F               	retlw	111	;'o'
   157  001F  3474               	retlw	116	;'t'
   158  0020  342E               	retlw	46	;'.'
   159  0021  3463               	retlw	99	;'c'
   160  0022  346F               	retlw	111	;'o'
   161  0023  346D               	retlw	109	;'m'
   162  0024  3400               	retlw	0
   163                           
   164                           	psect	cinit
   165  051A                     start_initialization:	
   166  051A  3060               	movlw	low (__pdataBANK0+64)
   167                           
   168                           ; Initialize objects allocated to BANK0
   169  051B  1383               	bcf	3,7	;select IRP bank0
   170  051C  00FD               	movwf	125
   171  051D  3005               	movlw	high __pidataBANK0
   172  051E  00FE               	movwf	126
   173  051F  303B               	movlw	low __pidataBANK0
   174  0520  00FF               	movwf	127
   175  0521  3020               	movlw	low __pdataBANK0
   176  0522  0084               	movwf	4
   177  0523  120A  118A  252E   	fcall	init_ram
   178  0526                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  0526  0183               	clrf	3
   182  0527  120A  118A  2D7B   	ljmp	_main	;jump to C main() function
   183                           
   184                           	psect	dataBANK0
   185  0020                     __pdataBANK0:	
   186  0020                     _CustomCharacter1:	
   187  0020                     	ds	8
   188  0028                     _CustomCharacter2:	
   189  0028                     	ds	8
   190  0030                     _CustomCharacter3:	
   191  0030                     	ds	8
   192  0038                     _CustomCharacter4:	
   193  0038                     	ds	8
   194  0040                     _CustomCharacter5:	
   195  0040                     	ds	8
   196  0048                     _CustomCharacter6:	
   197  0048                     	ds	8
   198  0050                     _CustomCharacter7:	
   199  0050                     	ds	8
   200  0058                     _CustomCharacter8:	
   201  0058                     	ds	8
   202                           
   203                           	psect	inittext
   204  052A                     init_fetch:	
   205                           ;	Called with low address in FSR and high address in W
   206                           
   207  052A  087E               	movf	126,w
   208  052B  008A               	movwf	10
   209  052C  087F               	movf	127,w
   210  052D  0082               	movwf	2
   211  052E                     init_ram:	
   212                           ;Called with:
   213                           ;	high address of idata address in btemp 
   214                           ;	low address of idata address in btemp+1 
   215                           ;	low address of data in FSR
   216                           ;	high address + 1 of data in btemp-1
   217                           
   218  052E  252A  120A  118A   	fcall	init_fetch
   219  0531  0080               	movwf	0
   220  0532  0A84               	incf	4,f
   221  0533  0804               	movf	4,w
   222  0534  067D               	xorwf	125,w
   223  0535  1903               	btfsc	3,2
   224  0536  3400               	retlw	0
   225  0537  0AFF               	incf	127,f
   226  0538  1903               	btfsc	3,2
   227  0539  0AFE               	incf	126,f
   228  053A  2D2E               	goto	init_ram
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:	
   232  0070                     ?_Write4BitValueToDataBus:	
   233  0070                     ??_Write4BitValueToDataBus:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_Write4BitValueToDataDirBus:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ??_Write4BitValueToDataDirBus:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_WriteCommandToLCD:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_WriteDataToLCD:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ?_InitLCD:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_WriteStringToLCD:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_LCDIsBusy:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_ReadLCDAddressCounter:	
   261                           ; 1 bytes @ 0x0
   262                           
   263                           
   264                           ; 1 bytes @ 0x0
   265  0070                     	ds	1
   266  0071                     Write4BitValueToDataBus@Data:	
   267  0071                     Write4BitValueToDataDirBus@DataDir:	
   268                           ; 1 bytes @ 0x1
   269                           
   270                           
   271                           ; 1 bytes @ 0x1
   272  0071                     	ds	1
   273  0072                     ??_LCDIsBusy:	
   274  0072                     ??_ReadLCDAddressCounter:	
   275                           ; 0 bytes @ 0x2
   276                           
   277  0072                     ??_WriteCommandToLCD:	
   278                           ; 0 bytes @ 0x2
   279                           
   280  0072                     ??_WriteDataToLCD:	
   281                           ; 0 bytes @ 0x2
   282                           
   283  0072                     WriteCommandToLCD@Command:	
   284                           ; 0 bytes @ 0x2
   285                           
   286  0072                     WriteDataToLCD@LCDChar:	
   287                           ; 1 bytes @ 0x2
   288                           
   289  0072                     ReadLCDAddressCounter@AddressCounter:	
   290                           ; 1 bytes @ 0x2
   291                           
   292                           
   293                           ; 1 bytes @ 0x2
   294  0072                     	ds	1
   295  0073                     ?_LCD_Char_build:	
   296  0073                     ?_GotoYXPositionOnLCD:	
   297                           ; 0 bytes @ 0x3
   298                           
   299  0073                     ?_ScrollLCD:	
   300                           ; 0 bytes @ 0x3
   301                           
   302  0073                     GotoYXPositionOnLCD@OFFSET:	
   303                           ; 0 bytes @ 0x3
   304                           
   305  0073                     LCD_Char_build@ptr:	
   306                           ; 1 bytes @ 0x3
   307                           
   308  0073                     ScrollLCD@RightOrLeft:	
   309                           ; 1 bytes @ 0x3
   310                           
   311                           
   312                           ; 1 bytes @ 0x3
   313  0073                     	ds	1
   314  0074                     ??_LCD_Char_build:	
   315  0074                     ??_GotoYXPositionOnLCD:	
   316                           ; 0 bytes @ 0x4
   317                           
   318  0074                     ScrollLCD@ByHowMuch:	
   319                           ; 0 bytes @ 0x4
   320                           
   321                           
   322                           ; 1 bytes @ 0x4
   323  0074                     	ds	1
   324  0075                     ??_ScrollLCD:	
   325  0075                     GotoYXPositionOnLCD@LineNumber:	
   326                           ; 0 bytes @ 0x5
   327                           
   328  0075                     LCD_Char_build@location:	
   329                           ; 1 bytes @ 0x5
   330                           
   331                           
   332                           ; 1 bytes @ 0x5
   333  0075                     	ds	1
   334  0076                     ??_WriteStringToLCD:	
   335  0076                     LCD_Char_build@i:	
   336                           ; 0 bytes @ 0x6
   337                           
   338  0076                     WriteStringToLCD@LCD_DDRAM_Address:	
   339                           ; 1 bytes @ 0x6
   340                           
   341                           
   342                           ; 2 bytes @ 0x6
   343  0076                     	ds	1
   344  0077                     ??_InitLCD:	
   345  0077                     ScrollLCD@ScreenOrCursor:	
   346                           ; 0 bytes @ 0x7
   347                           
   348                           
   349                           ; 1 bytes @ 0x7
   350  0077                     	ds	1
   351  0078                     WriteStringToLCD@s:	
   352  0078                     ScrollLCD@i:	
   353                           ; 1 bytes @ 0x8
   354                           
   355                           
   356                           ; 1 bytes @ 0x8
   357  0078                     	ds	2
   358  007A                     ??_main:	
   359                           
   360                           ; 0 bytes @ 0xA
   361  007A                     	ds	3
   362                           
   363                           	psect	maintext
   364  057B                     __pmaintext:	
   365 ;;Data sizes: Strings 28, constant 0, data 64, bss 0, persistent 0 stack 0
   366 ;;Auto spaces:   Size  Autos    Used
   367 ;; COMMON          14     13      13
   368 ;; BANK0           80      0      64
   369 ;; BANK1           80      0       0
   370 ;; BANK3           96      0       0
   371 ;; BANK2           96      0       0
   372 ;;
   373 ;; Pointer list with targets:
   374 ;; LCD_Char_build@ptr	PTR unsigned char  size(1) Largest target is 8
   375 ;;		 -> CustomCharacter8(BANK0[8]), CustomCharacter7(BANK0[8]), CustomCharacter6(BANK0[8]), CustomCharacter5(BANK0[8]), 
   376 ;;		 -> CustomCharacter4(BANK0[8]), CustomCharacter3(BANK0[8]), CustomCharacter2(BANK0[8]), CustomCharacter1(BANK0[8]), 
   377 ;;
   378 ;; WriteStringToLCD@s	PTR const unsigned char  size(1) Largest target is 28
   379 ;;		 -> STR_1(CODE[28]), 
   380 ;;
   381 ;;
   382 ;; Critical Paths under _main in COMMON
   383 ;;
   384 ;;   _main->_InitLCD
   385 ;;   _WriteStringToLCD->_GotoYXPositionOnLCD
   386 ;;   _InitLCD->_LCD_Char_build
   387 ;;   _ScrollLCD->_WriteCommandToLCD
   388 ;;   _GotoYXPositionOnLCD->_WriteCommandToLCD
   389 ;;   _LCD_Char_build->_WriteCommandToLCD
   390 ;;   _LCD_Char_build->_WriteDataToLCD
   391 ;;   _WriteDataToLCD->_Write4BitValueToDataBus
   392 ;;   _WriteCommandToLCD->_Write4BitValueToDataBus
   393 ;;   _ReadLCDAddressCounter->_Write4BitValueToDataDirBus
   394 ;;   _LCDIsBusy->_Write4BitValueToDataDirBus
   395 ;;
   396 ;; Critical Paths under _main in BANK0
   397 ;;
   398 ;;   None.
   399 ;;
   400 ;; Critical Paths under _main in BANK1
   401 ;;
   402 ;;   None.
   403 ;;
   404 ;; Critical Paths under _main in BANK3
   405 ;;
   406 ;;   None.
   407 ;;
   408 ;; Critical Paths under _main in BANK2
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   413 ;;
   414 ;;
   415 ;;Call Graph Tables:
   416 ;;
   417 ;; ---------------------------------------------------------------------------------
   418 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   419 ;; ---------------------------------------------------------------------------------
   420 ;; (0) _main                                                 3     3      0    2431
   421 ;;                                             10 COMMON     3     3      0
   422 ;;                            _InitLCD
   423 ;;                   _WriteStringToLCD
   424 ;;                _GotoYXPositionOnLCD
   425 ;;                     _WriteDataToLCD
   426 ;;                          _ScrollLCD
   427 ;; ---------------------------------------------------------------------------------
   428 ;; (1) _WriteStringToLCD                                     3     3      0     667
   429 ;;                                              6 COMMON     3     3      0
   430 ;;              _ReadLCDAddressCounter
   431 ;;                _GotoYXPositionOnLCD
   432 ;;                     _WriteDataToLCD
   433 ;; ---------------------------------------------------------------------------------
   434 ;; (1) _InitLCD                                              3     3      0     970
   435 ;;                                              7 COMMON     3     3      0
   436 ;;            _Write4BitValueToDataBus
   437 ;;         _Write4BitValueToDataDirBus
   438 ;;                  _WriteCommandToLCD
   439 ;;                     _LCD_Char_build
   440 ;; ---------------------------------------------------------------------------------
   441 ;; (1) _ScrollLCD                                            6     4      2     310
   442 ;;                                              3 COMMON     6     4      2
   443 ;;                  _WriteCommandToLCD
   444 ;; ---------------------------------------------------------------------------------
   445 ;; (1) _GotoYXPositionOnLCD                                  3     2      1     264
   446 ;;                                              3 COMMON     3     2      1
   447 ;;                  _WriteCommandToLCD
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (2) _LCD_Char_build                                       4     3      1     574
   450 ;;                                              3 COMMON     4     3      1
   451 ;;                  _WriteCommandToLCD
   452 ;;                     _WriteDataToLCD
   453 ;; ---------------------------------------------------------------------------------
   454 ;; (1) _WriteDataToLCD                                       1     1      0     220
   455 ;;                                              2 COMMON     1     1      0
   456 ;;                          _LCDIsBusy
   457 ;;            _Write4BitValueToDataBus
   458 ;; ---------------------------------------------------------------------------------
   459 ;; (2) _WriteCommandToLCD                                    1     1      0     220
   460 ;;                                              2 COMMON     1     1      0
   461 ;;                          _LCDIsBusy
   462 ;;            _Write4BitValueToDataBus
   463 ;; ---------------------------------------------------------------------------------
   464 ;; (2) _ReadLCDAddressCounter                                1     1      0     114
   465 ;;                                              2 COMMON     1     1      0
   466 ;;         _Write4BitValueToDataDirBus
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (3) _LCDIsBusy                                            0     0      0      88
   469 ;;         _Write4BitValueToDataDirBus
   470 ;; ---------------------------------------------------------------------------------
   471 ;; (4) _Write4BitValueToDataDirBus                           2     2      0      88
   472 ;;                                              0 COMMON     2     2      0
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (3) _Write4BitValueToDataBus                              2     2      0      88
   475 ;;                                              0 COMMON     2     2      0
   476 ;; ---------------------------------------------------------------------------------
   477 ;; Estimated maximum stack depth 4
   478 ;; ---------------------------------------------------------------------------------
   479 ;; Call Graph Graphs:
   480 ;; _main (ROOT)
   481 ;;   _InitLCD
   482 ;;     _Write4BitValueToDataBus
   483 ;;     _Write4BitValueToDataDirBus
   484 ;;     _WriteCommandToLCD
   485 ;;       _LCDIsBusy
   486 ;;         _Write4BitValueToDataDirBus
   487 ;;       _Write4BitValueToDataBus
   488 ;;     _LCD_Char_build
   489 ;;       _WriteCommandToLCD
   490 ;;         _LCDIsBusy
   491 ;;           _Write4BitValueToDataDirBus
   492 ;;         _Write4BitValueToDataBus
   493 ;;       _WriteDataToLCD
   494 ;;         _LCDIsBusy
   495 ;;           _Write4BitValueToDataDirBus
   496 ;;         _Write4BitValueToDataBus
   497 ;;   _WriteStringToLCD
   498 ;;     _ReadLCDAddressCounter
   499 ;;       _Write4BitValueToDataDirBus
   500 ;;     _GotoYXPositionOnLCD
   501 ;;       _WriteCommandToLCD
   502 ;;         _LCDIsBusy
   503 ;;           _Write4BitValueToDataDirBus
   504 ;;         _Write4BitValueToDataBus
   505 ;;     _WriteDataToLCD
   506 ;;       _LCDIsBusy
   507 ;;         _Write4BitValueToDataDirBus
   508 ;;       _Write4BitValueToDataBus
   509 ;;   _GotoYXPositionOnLCD
   510 ;;     _WriteCommandToLCD
   511 ;;       _LCDIsBusy
   512 ;;         _Write4BitValueToDataDirBus
   513 ;;       _Write4BitValueToDataBus
   514 ;;   _WriteDataToLCD
   515 ;;     _LCDIsBusy
   516 ;;       _Write4BitValueToDataDirBus
   517 ;;     _Write4BitValueToDataBus
   518 ;;   _ScrollLCD
   519 ;;     _WriteCommandToLCD
   520 ;;       _LCDIsBusy
   521 ;;         _Write4BitValueToDataDirBus
   522 ;;       _Write4BitValueToDataBus
   523 ;;
   524 ;; Address spaces:
   525 ;;Name               Size   Autos  Total    Cost      Usage
   526 ;;BANK3               60      0       0       9        0.0%
   527 ;;BITBANK3            60      0       0       8        0.0%
   528 ;;SFR3                 0      0       0       4        0.0%
   529 ;;BITSFR3              0      0       0       4        0.0%
   530 ;;BANK2               60      0       0      11        0.0%
   531 ;;BITBANK2            60      0       0      10        0.0%
   532 ;;SFR2                 0      0       0       5        0.0%
   533 ;;BITSFR2              0      0       0       5        0.0%
   534 ;;SFR1                 0      0       0       2        0.0%
   535 ;;BITSFR1              0      0       0       2        0.0%
   536 ;;BANK1               50      0       0       7        0.0%
   537 ;;BITBANK1            50      0       0       6        0.0%
   538 ;;CODE                 0      0       0       0        0.0%
   539 ;;DATA                 0      0      52      12        0.0%
   540 ;;ABS                  0      0      4D       3        0.0%
   541 ;;NULL                 0      0       0       0        0.0%
   542 ;;STACK                0      0       5       2        0.0%
   543 ;;BANK0               50      0      40       5       80.0%
   544 ;;BITBANK0            50      0       0       4        0.0%
   545 ;;SFR0                 0      0       0       1        0.0%
   546 ;;BITSFR0              0      0       0       1        0.0%
   547 ;;COMMON               E      D       D       1       92.9%
   548 ;;BITCOMMON            E      0       0       0        0.0%
   549 ;;EEDATA             100      0       0       0        0.0%
   550                           
   551                           
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 16 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\Main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;		None               void
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 17F/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          3       0       0       0       0
   571 ;;      Totals:         3       0       0       0       0
   572 ;;Total ram usage:        3 bytes
   573 ;; Hardware stack levels required when called:    5
   574 ;; This function calls:
   575 ;;		_InitLCD
   576 ;;		_WriteStringToLCD
   577 ;;		_GotoYXPositionOnLCD
   578 ;;		_WriteDataToLCD
   579 ;;		_ScrollLCD
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584  057B                     _main:	
   585                           
   586                           ;Main.c: 17: InitLCD();
   587                           
   588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   589  057B  120A  118A  25D9   	fcall	_InitLCD
      +       120A  118A         
   590                           
   591                           ;Main.c: 19: WriteStringToLCD("saeedsolutions.blogspot.com");
   592  0580  3001               	movlw	(STR_1-__stringbase)& (0+255)
   593  0581  120A  118A  26F4   	fcall	_WriteStringToLCD
      +       120A  118A         
   594                           
   595                           ;Main.c: 21: GotoYXPositionOnLCD(1, 38);
   596  0586  3026               	movlw	38
   597  0587  00F3               	movwf	?_GotoYXPositionOnLCD
   598  0588  3001               	movlw	1
   599  0589  120A  118A  272A   	fcall	_GotoYXPositionOnLCD
      +       120A  118A         
   600                           
   601                           ;Main.c: 23: WriteDataToLCD(0x06);
   602  058E  3006               	movlw	6
   603  058F  120A  118A  2795   	fcall	_WriteDataToLCD
      +       120A  118A         
   604                           
   605                           ;Main.c: 24: WriteDataToLCD(0x07);
   606  0594  3007               	movlw	7
   607  0595  120A  118A  2795   	fcall	_WriteDataToLCD
      +       120A  118A         
   608                           
   609                           ;Main.c: 26: _delay((unsigned long)((1000)*(20000000/4000.0)));
   610  059A  301A               	movlw	26
   611  059B  00FC               	movwf	??_main+2
   612  059C  305E               	movlw	94
   613  059D  00FB               	movwf	??_main+1
   614  059E  3086               	movlw	134
   615  059F  00FA               	movwf	??_main
   616  05A0                     u497:	
   617  05A0  0BFA               	decfsz	??_main,f
   618  05A1  2DA0               	goto	u497
   619  05A2  0BFB               	decfsz	??_main+1,f
   620  05A3  2DA0               	goto	u497
   621  05A4  0BFC               	decfsz	??_main+2,f
   622  05A5  2DA0               	goto	u497
   623  05A6  0064               	clrwdt
   624  05A7                     l2943:	
   625  05A7  3001               	movlw	1
   626                           
   627                           ;Main.c: 29: {
   628                           ;Main.c: 30: ScrollLCD(1, 0, 1);
   629  05A8  01F3               	clrf	?_ScrollLCD
   630  05A9  01F4               	clrf	?_ScrollLCD+1
   631  05AA  0AF4               	incf	?_ScrollLCD+1,f
   632  05AB  120A  118A  25BE   	fcall	_ScrollLCD
      +       120A  118A         
   633                           
   634                           ;Main.c: 31: _delay((unsigned long)((200)*(20000000/4000.0)));
   635  05B0  3006               	movlw	6
   636  05B1  00FC               	movwf	??_main+2
   637  05B2  3013               	movlw	19
   638  05B3  00FB               	movwf	??_main+1
   639  05B4  30B1               	movlw	177
   640  05B5  00FA               	movwf	??_main
   641  05B6                     u507:	
   642  05B6  0BFA               	decfsz	??_main,f
   643  05B7  2DB6               	goto	u507
   644  05B8  0BFB               	decfsz	??_main+1,f
   645  05B9  2DB6               	goto	u507
   646  05BA  0BFC               	decfsz	??_main+2,f
   647  05BB  2DB6               	goto	u507
   648  05BC  2DBD               	nop2
   649  05BD  2DA7               	goto	l2943
   650  05BE                     __end_of_main:	
   651                           
   652                           	psect	text254
   653  05BE                     __ptext254:	
   654 ;; =============== function _InitLCD ends ============
   655                           
   656                           
   657 ;; *************** function _ScrollLCD *****************
   658 ;; Defined at:
   659 ;;		line 477 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  ScreenOrCurs    1    wreg     unsigned char 
   662 ;;  RightOrLeft     1    3[COMMON] unsigned char 
   663 ;;  ByHowMuch       1    4[COMMON] unsigned char 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  ScreenOrCurs    1    7[COMMON] unsigned char 
   666 ;;  i               1    8[COMMON] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;		None               void
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         2       0       0       0       0
   677 ;;      Locals:         2       0       0       0       0
   678 ;;      Temps:          2       0       0       0       0
   679 ;;      Totals:         6       0       0       0       0
   680 ;;Total ram usage:        6 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    3
   683 ;; This function calls:
   684 ;;		_WriteCommandToLCD
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689  05BE                     _ScrollLCD:	
   690                           
   691                           ; Regs used in _ScrollLCD: [wreg+status,2+status,0+pclath+cstack]
   692                           ;ScrollLCD@ScreenOrCursor stored from wreg
   693  05BE  00F7               	movwf	ScrollLCD@ScreenOrCursor
   694                           
   695                           ;LCD.c: 478: for(unsigned char i=0; i<ByHowMuch; i++)
   696  05BF  01F8               	clrf	ScrollLCD@i
   697  05C0                     l2833:	
   698  05C0  0874               	movf	ScrollLCD@ByHowMuch,w
   699  05C1  0278               	subwf	ScrollLCD@i,w
   700  05C2  1803               	btfsc	3,0
   701  05C3  0008               	return
   702                           
   703                           ;LCD.c: 479: WriteCommandToLCD(0x10|(ScreenOrCursor<<3)|(RightOrLeft<<2));
   704  05C4  0873               	movf	ScrollLCD@RightOrLeft,w
   705  05C5  00F5               	movwf	??_ScrollLCD
   706  05C6  1003               	clrc
   707  05C7  0DF5               	rlf	??_ScrollLCD,f
   708  05C8  1003               	clrc
   709  05C9  0DF5               	rlf	??_ScrollLCD,f
   710  05CA  0877               	movf	ScrollLCD@ScreenOrCursor,w
   711  05CB  00F6               	movwf	??_ScrollLCD+1
   712  05CC  1003               	clrc
   713  05CD  0DF6               	rlf	??_ScrollLCD+1,f
   714  05CE  1003               	clrc
   715  05CF  0DF6               	rlf	??_ScrollLCD+1,f
   716  05D0  1003               	clrc
   717  05D1  0D76               	rlf	??_ScrollLCD+1,w
   718  05D2  0475               	iorwf	??_ScrollLCD,w
   719  05D3  3810               	iorlw	16
   720  05D4  26A4  120A  118A   	fcall	_WriteCommandToLCD
   721  05D7  0AF8               	incf	ScrollLCD@i,f
   722  05D8  2DC0               	goto	l2833
   723  05D9                     __end_of_ScrollLCD:	
   724  05D9                     __ptext253:	
   725 ;; =============== function _WriteStringToLCD ends ============
   726                           
   727                           
   728 ;; *************** function _InitLCD *****************
   729 ;; Defined at:
   730 ;;		line 70 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;		None               void
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 17F/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          3       0       0       0       0
   747 ;;      Totals:         3       0       0       0       0
   748 ;;Total ram usage:        3 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    4
   751 ;; This function calls:
   752 ;;		_Write4BitValueToDataBus
   753 ;;		_Write4BitValueToDataDirBus
   754 ;;		_WriteCommandToLCD
   755 ;;		_LCD_Char_build
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760  05D9                     _InitLCD:	
   761                           
   762                           ;LCD.c: 72: RB0 = 0;
   763                           
   764                           ; Regs used in _InitLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   765  05D9  1006               	bcf	6,0
   766                           
   767                           ;LCD.c: 73: RB1 = 0;
   768  05DA  1086               	bcf	6,1
   769                           
   770                           ;LCD.c: 74: RB2 = 0;
   771  05DB  1106               	bcf	6,2
   772                           
   773                           ;LCD.c: 79: TRISB0 = 0;
   774  05DC  1683               	bsf	3,5	;RP0=1, select bank1
   775  05DD  3000               	movlw	0
   776  05DE  1006               	bcf	6,0
   777                           
   778                           ;LCD.c: 80: TRISB1 = 0;
   779  05DF  1086               	bcf	6,1
   780                           
   781                           ;LCD.c: 81: TRISB2 = 0;
   782  05E0  1106               	bcf	6,2
   783                           
   784                           ;LCD.c: 84: Write4BitValueToDataBus(0x0);
   785  05E1  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
   786                           
   787                           ;LCD.c: 85: Write4BitValueToDataDirBus(0x0);
   788  05E4  3000               	movlw	0
   789  05E5  276B  120A  118A   	fcall	_Write4BitValueToDataDirBus
   790                           
   791                           ;LCD.c: 97: RB1 = 0;
   792  05E8  1283               	bcf	3,5	;RP0=0, select bank0
   793  05E9  3002               	movlw	2
   794  05EA  1086               	bcf	6,1
   795                           
   796                           ;LCD.c: 98: RB0 = 0;
   797  05EB  1006               	bcf	6,0
   798                           
   799                           ;LCD.c: 100: _delay((unsigned long)((40)*(20000000/4000.0)));
   800  05EC  00F9               	movwf	??_InitLCD+2
   801  05ED  3004               	movlw	4
   802  05EE  00F8               	movwf	??_InitLCD+1
   803  05EF  30BA               	movlw	186
   804  05F0  00F7               	movwf	??_InitLCD
   805  05F1                     u517:	
   806  05F1  0BF7               	decfsz	??_InitLCD,f
   807  05F2  2DF1               	goto	u517
   808  05F3  0BF8               	decfsz	??_InitLCD+1,f
   809  05F4  2DF1               	goto	u517
   810  05F5  0BF9               	decfsz	??_InitLCD+2,f
   811  05F6  2DF1               	goto	u517
   812  05F7  0064               	clrwdt
   813                           
   814                           ;LCD.c: 103: Write4BitValueToDataBus(0x3);
   815  05F8  3003               	movlw	3
   816  05F9  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
   817                           
   818                           ;LCD.c: 108: RB2 = 1;
   819  05FC  1506               	bsf	6,2
   820                           
   821                           ;LCD.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
   822  05FD  2DFE               	nop2	;2 cycle nop
   823  05FE  2DFF               	nop2	;2 cycle nop
   824  05FF  0064               	clrwdt
   825  0600  27FA               	call	PL4	;select bank 0
   826                           
   827                           ;LCD.c: 110: RB2 = 0;
   828  0601  1106               	bcf	6,2
   829                           
   830                           ;LCD.c: 111: _delay((unsigned long)((1)*(20000000/4000000.0)));
   831  0602  2E03               	nop2	;2 cycle nop
   832  0603  2E04               	nop2	;2 cycle nop
   833  0604  0064               	clrwdt
   834                           
   835                           ;LCD.c: 113: _delay((unsigned long)((6)*(20000000/4000.0)));
   836  0605  3027               	movlw	39
   837  0606  00F8               	movwf	??_InitLCD+1
   838  0607  30F5               	movlw	245
   839  0608  00F7               	movwf	??_InitLCD
   840  0609                     u527:	
   841  0609  0BF7               	decfsz	??_InitLCD,f
   842  060A  2E09               	goto	u527
   843  060B  0BF8               	decfsz	??_InitLCD+1,f
   844  060C  2E09               	goto	u527
   845                           
   846                           ;LCD.c: 116: Write4BitValueToDataBus(0x3);
   847  060D  3003               	movlw	3
   848  060E  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
   849                           
   850                           ;LCD.c: 121: RB2 = 1;
   851  0611  1506               	bsf	6,2
   852                           
   853                           ;LCD.c: 122: _delay((unsigned long)((1)*(20000000/4000000.0)));
   854  0612  2E13               	nop2	;2 cycle nop
   855  0613  2E14               	nop2	;2 cycle nop
   856  0614  0064               	clrwdt
   857  0615  27FA               	call	PL4	;select bank 0
   858                           
   859                           ;LCD.c: 123: RB2 = 0;
   860  0616  1106               	bcf	6,2
   861                           
   862                           ;LCD.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
   863  0617  2E18               	nop2	;2 cycle nop
   864  0618  2E19               	nop2	;2 cycle nop
   865  0619  0064               	clrwdt
   866                           
   867                           ;LCD.c: 126: _delay((unsigned long)((300)*(20000000/4000000.0)));
   868  061A  30D6               	movlw	214
   869  061B  00F7               	movwf	??_InitLCD
   870  061C                     u537:	
   871  061C  2E1D               	nop2
   872  061D  2E1E               	nop2
   873  061E  0BF7               	decfsz	??_InitLCD,f
   874  061F  2E1C               	goto	u537
   875  0620  0064               	clrwdt
   876                           
   877                           ;LCD.c: 129: Write4BitValueToDataBus(0x3);
   878  0621  3003               	movlw	3
   879  0622  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
   880                           
   881                           ;LCD.c: 134: RB2 = 1;
   882  0625  1506               	bsf	6,2
   883                           
   884                           ;LCD.c: 135: _delay((unsigned long)((1)*(20000000/4000000.0)));
   885  0626  2E27               	nop2	;2 cycle nop
   886  0627  2E28               	nop2	;2 cycle nop
   887  0628  0064               	clrwdt
   888  0629  27FA               	call	PL4	;select bank 0
   889                           
   890                           ;LCD.c: 136: RB2 = 0;
   891  062A  1106               	bcf	6,2
   892                           
   893                           ;LCD.c: 137: _delay((unsigned long)((1)*(20000000/4000000.0)));
   894  062B  2E2C               	nop2	;2 cycle nop
   895  062C  2E2D               	nop2	;2 cycle nop
   896  062D  0064               	clrwdt
   897                           
   898                           ;LCD.c: 139: _delay((unsigned long)((2)*(20000000/4000.0)));
   899  062E  300D               	movlw	13
   900  062F  00F8               	movwf	??_InitLCD+1
   901  0630  30FB               	movlw	251
   902  0631  00F7               	movwf	??_InitLCD
   903  0632                     u547:	
   904  0632  0BF7               	decfsz	??_InitLCD,f
   905  0633  2E32               	goto	u547
   906  0634  0BF8               	decfsz	??_InitLCD+1,f
   907  0635  2E32               	goto	u547
   908  0636  2E37               	nop2
   909                           
   910                           ;LCD.c: 143: Write4BitValueToDataBus(0x2);
   911  0637  3002               	movlw	2
   912  0638  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
   913                           
   914                           ;LCD.c: 145: RB2 = 1;
   915  063B  1506               	bsf	6,2
   916                           
   917                           ;LCD.c: 146: _delay((unsigned long)((1)*(20000000/4000000.0)));
   918  063C  2E3D               	nop2	;2 cycle nop
   919  063D  2E3E               	nop2	;2 cycle nop
   920  063E  0064               	clrwdt
   921  063F  27FA               	call	PL4	;select bank 0
   922                           
   923                           ;LCD.c: 147: RB2 = 0;
   924  0640  1106               	bcf	6,2
   925                           
   926                           ;LCD.c: 148: _delay((unsigned long)((1)*(20000000/4000000.0)));
   927  0641  2E42               	nop2	;2 cycle nop
   928  0642  2E43               	nop2	;2 cycle nop
   929  0643  0064               	clrwdt
   930                           
   931                           ;LCD.c: 158: WriteCommandToLCD(0x28);
   932  0644  3028               	movlw	40
   933  0645  26A4  120A  118A   	fcall	_WriteCommandToLCD
   934                           
   935                           ;LCD.c: 175: WriteCommandToLCD(0x0c);
   936  0648  300C               	movlw	12
   937  0649  26A4  120A  118A   	fcall	_WriteCommandToLCD
   938                           
   939                           ;LCD.c: 178: WriteCommandToLCD(0x01);
   940  064C  3001               	movlw	1
   941  064D  26A4  120A  118A   	fcall	_WriteCommandToLCD
   942                           
   943                           ;LCD.c: 183: WriteCommandToLCD(0x06);
   944  0650  3006               	movlw	6
   945  0651  26A4  120A  118A   	fcall	_WriteCommandToLCD
   946                           
   947                           ;LCD.c: 187: LCD_Char_build(0, CustomCharacter1);
   948  0654  3020               	movlw	_CustomCharacter1& (0+255)
   949  0655  00F3               	movwf	?_LCD_Char_build
   950  0656  3000               	movlw	0
   951  0657  2682  120A  118A   	fcall	_LCD_Char_build
   952                           
   953                           ;LCD.c: 188: LCD_Char_build(1, CustomCharacter2);
   954  065A  3028               	movlw	_CustomCharacter2& (0+255)
   955  065B  00F3               	movwf	?_LCD_Char_build
   956  065C  3001               	movlw	1
   957  065D  2682  120A  118A   	fcall	_LCD_Char_build
   958                           
   959                           ;LCD.c: 189: LCD_Char_build(2, CustomCharacter3);
   960  0660  3030               	movlw	_CustomCharacter3& (0+255)
   961  0661  00F3               	movwf	?_LCD_Char_build
   962  0662  3002               	movlw	2
   963  0663  2682  120A  118A   	fcall	_LCD_Char_build
   964                           
   965                           ;LCD.c: 190: LCD_Char_build(3, CustomCharacter4);
   966  0666  3038               	movlw	_CustomCharacter4& (0+255)
   967  0667  00F3               	movwf	?_LCD_Char_build
   968  0668  3003               	movlw	3
   969  0669  2682  120A  118A   	fcall	_LCD_Char_build
   970                           
   971                           ;LCD.c: 191: LCD_Char_build(4, CustomCharacter5);
   972  066C  3040               	movlw	_CustomCharacter5& (0+255)
   973  066D  00F3               	movwf	?_LCD_Char_build
   974  066E  3004               	movlw	4
   975  066F  2682  120A  118A   	fcall	_LCD_Char_build
   976                           
   977                           ;LCD.c: 192: LCD_Char_build(5, CustomCharacter6);
   978  0672  3048               	movlw	_CustomCharacter6& (0+255)
   979  0673  00F3               	movwf	?_LCD_Char_build
   980  0674  3005               	movlw	5
   981  0675  2682  120A  118A   	fcall	_LCD_Char_build
   982                           
   983                           ;LCD.c: 193: LCD_Char_build(6, CustomCharacter7);
   984  0678  3050               	movlw	_CustomCharacter7& (0+255)
   985  0679  00F3               	movwf	?_LCD_Char_build
   986  067A  3006               	movlw	6
   987  067B  2682  120A  118A   	fcall	_LCD_Char_build
   988                           
   989                           ;LCD.c: 194: LCD_Char_build(7, CustomCharacter8);
   990  067E  3058               	movlw	_CustomCharacter8& (0+255)
   991  067F  00F3               	movwf	?_LCD_Char_build
   992  0680  3007               	movlw	7
   993  0681  2E82               	ljmp	_LCD_Char_build
   994  0682                     __end_of_InitLCD:	
   995  0682                     __ptext256:	
   996 ;; =============== function _GotoYXPositionOnLCD ends ============
   997                           
   998                           
   999 ;; *************** function _LCD_Char_build *****************
  1000 ;; Defined at:
  1001 ;;		line 405 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  location        1    wreg     unsigned char 
  1004 ;;  ptr             1    3[COMMON] PTR unsigned char 
  1005 ;;		 -> CustomCharacter8(8), CustomCharacter7(8), CustomCharacter6(8), CustomCharacter5(8), 
  1006 ;;		 -> CustomCharacter4(8), CustomCharacter3(8), CustomCharacter2(8), CustomCharacter1(8), 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  location        1    5[COMMON] unsigned char 
  1009 ;;  i               1    6[COMMON] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;		None               void
  1012 ;; Registers used:
  1013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         1       0       0       0       0
  1020 ;;      Locals:         2       0       0       0       0
  1021 ;;      Temps:          1       0       0       0       0
  1022 ;;      Totals:         4       0       0       0       0
  1023 ;;Total ram usage:        4 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    3
  1026 ;; This function calls:
  1027 ;;		_WriteCommandToLCD
  1028 ;;		_WriteDataToLCD
  1029 ;; This function is called by:
  1030 ;;		_InitLCD
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033  0682                     _LCD_Char_build:	
  1034                           
  1035                           ; Regs used in _LCD_Char_build: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1036                           ;LCD_Char_build@location stored from wreg
  1037  0682  00F5               	movwf	LCD_Char_build@location
  1038                           
  1039                           ;LCD.c: 406: unsigned char i;
  1040                           ;LCD.c: 408: if(location<8)
  1041  0683  3008               	movlw	8
  1042  0684  0275               	subwf	LCD_Char_build@location,w
  1043  0685  1803               	skipnc
  1044  0686  2EA2               	goto	l2823
  1045                           
  1046                           ;LCD.c: 409: {
  1047                           ;LCD.c: 410: WriteCommandToLCD(0x40+(location*8));
  1048  0687  0875               	movf	LCD_Char_build@location,w
  1049  0688  00F4               	movwf	??_LCD_Char_build
  1050  0689  1003               	clrc
  1051  068A  0DF4               	rlf	??_LCD_Char_build,f
  1052  068B  1003               	clrc
  1053  068C  0DF4               	rlf	??_LCD_Char_build,f
  1054  068D  1003               	clrc
  1055  068E  0D74               	rlf	??_LCD_Char_build,w
  1056  068F  3E40               	addlw	64
  1057  0690  26A4  120A  118A   	fcall	_WriteCommandToLCD
  1058                           
  1059                           ;LCD.c: 411: for(i=0;i<8;i++)
  1060  0693  01F6               	clrf	LCD_Char_build@i
  1061  0694                     l2817:	
  1062                           
  1063                           ;LCD.c: 412: WriteDataToLCD(ptr[i]);
  1064  0694  0876               	movf	LCD_Char_build@i,w
  1065  0695  0773               	addwf	LCD_Char_build@ptr,w
  1066  0696  00F4               	movwf	??_LCD_Char_build
  1067  0697  0084               	movwf	4
  1068  0698  1383               	bcf	3,7	;select IRP bank0
  1069  0699  0800               	movf	0,w
  1070  069A  2795  120A  118A   	fcall	_WriteDataToLCD
  1071  069D  3008               	movlw	8
  1072  069E  0AF6               	incf	LCD_Char_build@i,f
  1073  069F  0276               	subwf	LCD_Char_build@i,w
  1074  06A0  1C03               	skipc
  1075  06A1  2E94               	goto	l2817
  1076  06A2                     l2823:	
  1077                           
  1078                           ;LCD.c: 413: }
  1079                           ;LCD.c: 415: WriteCommandToLCD(0x80);
  1080  06A2  3080               	movlw	128
  1081  06A3  2EA4               	ljmp	_WriteCommandToLCD
  1082  06A4                     __end_of_LCD_Char_build:	
  1083  06A4                     __ptext258:	
  1084 ;; =============== function _WriteDataToLCD ends ============
  1085                           
  1086                           
  1087 ;; *************** function _WriteCommandToLCD *****************
  1088 ;; Defined at:
  1089 ;;		line 10 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  Command         1    wreg     unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  Command         1    2[COMMON] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;		None               void
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         1       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         1       0       0       0       0
  1107 ;;Total ram usage:        1 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    2
  1110 ;; This function calls:
  1111 ;;		_LCDIsBusy
  1112 ;;		_Write4BitValueToDataBus
  1113 ;; This function is called by:
  1114 ;;		_InitLCD
  1115 ;;		_GotoYXPositionOnLCD
  1116 ;;		_LCD_Char_build
  1117 ;;		_ScrollLCD
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120  06A4                     _WriteCommandToLCD:	
  1121                           
  1122                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+pclath+cstack]
  1123                           ;WriteCommandToLCD@Command stored from wreg
  1124  06A4  00F2               	movwf	WriteCommandToLCD@Command
  1125  06A5                     l2765:	
  1126                           ;LCD.c: 11: while(LCDIsBusy());
  1127                           
  1128  06A5  27BB  120A  118A   	fcall	_LCDIsBusy
  1129  06A8  3800               	iorlw	0
  1130  06A9  1D03               	skipz
  1131  06AA  2EA5               	goto	l2765
  1132  06AB  27FA               	call	PL4	;select bank 0
  1133                           
  1134                           ;LCD.c: 13: RB1 = 0;
  1135  06AC  1086               	bcf	6,1
  1136                           
  1137                           ;LCD.c: 14: RB0 = 0;
  1138  06AD  1006               	bcf	6,0
  1139                           
  1140                           ;LCD.c: 17: Write4BitValueToDataBus(Command>>4);
  1141  06AE  0E72               	swapf	WriteCommandToLCD@Command,w
  1142  06AF  390F               	andlw	15
  1143  06B0  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
  1144                           
  1145                           ;LCD.c: 22: RB2 = 1;
  1146  06B3  1506               	bsf	6,2
  1147                           
  1148                           ;LCD.c: 23: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1149  06B4  2EB5               	nop2	;2 cycle nop
  1150  06B5  2EB6               	nop2	;2 cycle nop
  1151  06B6  0064               	clrwdt
  1152  06B7  27FA               	call	PL4	;select bank 0
  1153                           
  1154                           ;LCD.c: 24: RB2 = 0;
  1155  06B8  1106               	bcf	6,2
  1156                           
  1157                           ;LCD.c: 25: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1158  06B9  2EBA               	nop2	;2 cycle nop
  1159  06BA  2EBB               	nop2	;2 cycle nop
  1160  06BB  0064               	clrwdt
  1161                           
  1162                           ;LCD.c: 29: Write4BitValueToDataBus(Command);
  1163  06BC  0872               	movf	WriteCommandToLCD@Command,w
  1164  06BD  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
  1165                           
  1166                           ;LCD.c: 31: RB2 = 1;
  1167  06C0  1506               	bsf	6,2
  1168                           
  1169                           ;LCD.c: 32: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1170  06C1  2EC2               	nop2	;2 cycle nop
  1171  06C2  2EC3               	nop2	;2 cycle nop
  1172  06C3  0064               	clrwdt
  1173  06C4  27FA               	call	PL4	;select bank 0
  1174                           
  1175                           ;LCD.c: 33: RB2 = 0;
  1176  06C5  1106               	bcf	6,2
  1177                           
  1178                           ;LCD.c: 34: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1179  06C6  2EC7               	nop2	;2 cycle nop
  1180  06C7  2EC8               	nop2	;2 cycle nop
  1181  06C8  0064               	clrwdt
  1182  06C9  0008               	return
  1183  06CA                     __end_of_WriteCommandToLCD:	
  1184  06CA                     __ptext262:	
  1185 ;; =============== function _Write4BitValueToDataDirBus ends ============
  1186                           
  1187                           
  1188 ;; *************** function _Write4BitValueToDataBus *****************
  1189 ;; Defined at:
  1190 ;;		line 358 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  Data            1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  Data            1    1[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;		None               void
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/20
  1201 ;;		On exit  : 60/0
  1202 ;;		Unchanged: FFE00/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0
  1206 ;;      Temps:          1       0       0       0       0
  1207 ;;      Totals:         2       0       0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_WriteCommandToLCD
  1214 ;;		_WriteDataToLCD
  1215 ;;		_InitLCD
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218  06CA                     _Write4BitValueToDataBus:	
  1219                           
  1220                           ; Regs used in _Write4BitValueToDataBus: [wreg+status,2+status,0]
  1221                           ;Write4BitValueToDataBus@Data stored from wreg
  1222  06CA  00F1               	movwf	Write4BitValueToDataBus@Data
  1223                           
  1224                           ;LCD.c: 360: RB4 = (((Data>>0)&0x1)!=0);
  1225  06CB  1C71               	btfss	Write4BitValueToDataBus@Data,0
  1226  06CC  2ED0               	goto	u250
  1227  06CD  27FA               	call	PL4	;select bank 0
  1228  06CE  1606               	bsf	6,4
  1229  06CF  2ED2               	goto	l2693
  1230  06D0                     u250:	
  1231  06D0  27FA               	call	PL4	;select bank 0
  1232  06D1  1206               	bcf	6,4
  1233  06D2                     l2693:	
  1234                           
  1235                           ;LCD.c: 361: RB5 = (((Data>>1)&0x1)!=0);
  1236  06D2  0871               	movf	Write4BitValueToDataBus@Data,w
  1237  06D3  00F0               	movwf	??_Write4BitValueToDataBus
  1238  06D4  1003               	clrc
  1239  06D5  0CF0               	rrf	??_Write4BitValueToDataBus,f
  1240  06D6  1C70               	btfss	??_Write4BitValueToDataBus,0
  1241  06D7  2EDB               	goto	u270
  1242  06D8  27FA               	call	PL4	;select bank 0
  1243  06D9  1686               	bsf	6,5
  1244  06DA  2EDD               	goto	u284
  1245  06DB                     u270:	
  1246  06DB  27FA               	call	PL4	;select bank 0
  1247  06DC  1286               	bcf	6,5
  1248  06DD                     u284:	
  1249                           
  1250                           ;LCD.c: 362: RB6 = (((Data>>2)&0x1)!=0);
  1251  06DD  27F3  120A  118A   	fcall	PL3	;call to abstracted procedure
  1252  06E0  1C70               	btfss	??_Write4BitValueToDataBus,0
  1253  06E1  2EE5               	goto	u290
  1254  06E2  27FA               	call	PL4	;select bank 0
  1255  06E3  1706               	bsf	6,6
  1256  06E4  2EE7               	goto	u304
  1257  06E5                     u290:	
  1258  06E5  27FA               	call	PL4	;select bank 0
  1259  06E6  1306               	bcf	6,6
  1260  06E7                     u304:	
  1261                           
  1262                           ;LCD.c: 363: RB7 = (((Data>>3)&0x1)!=0);
  1263  06E7  27F3  120A  118A   	fcall	PL3	;call to abstracted procedure
  1264  06EA  1003               	clrc
  1265  06EB  0CF0               	rrf	??_Write4BitValueToDataBus,f
  1266  06EC  1C70               	btfss	??_Write4BitValueToDataBus,0
  1267  06ED  2EF1               	goto	u310
  1268  06EE  27FA               	call	PL4	;select bank 0
  1269  06EF  1786               	bsf	6,7
  1270  06F0  0008               	return
  1271  06F1                     u310:	
  1272  06F1  27FA               	call	PL4	;select bank 0
  1273  06F2  1386               	bcf	6,7
  1274  06F3  0008               	return
  1275  06F4                     __end_of_Write4BitValueToDataBus:	
  1276  06F4                     __ptext252:	
  1277 ;; =============== function _main ends ============
  1278                           
  1279                           
  1280 ;; *************** function _WriteStringToLCD *****************
  1281 ;; Defined at:
  1282 ;;		line 199 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  s               1    wreg     PTR const unsigned char 
  1285 ;;		 -> STR_1(28), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  s               1    8[COMMON] PTR const unsigned char 
  1288 ;;		 -> STR_1(28), 
  1289 ;;  LCD_DDRAM_Ad    2    6[COMMON] unsigned int 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         3       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0
  1302 ;;      Totals:         3       0       0       0       0
  1303 ;;Total ram usage:        3 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    4
  1306 ;; This function calls:
  1307 ;;		_ReadLCDAddressCounter
  1308 ;;		_GotoYXPositionOnLCD
  1309 ;;		_WriteDataToLCD
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314  06F4                     _WriteStringToLCD:	
  1315                           
  1316                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1317                           ;WriteStringToLCD@s stored from wreg
  1318  06F4  00F8               	movwf	WriteStringToLCD@s
  1319  06F5                     l2927:	
  1320                           ;LCD.c: 202: while(*s)
  1321                           
  1322  06F5  0878               	movf	WriteStringToLCD@s,w
  1323  06F6  0084               	movwf	4
  1324  06F7  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1325  06FC  3800               	iorlw	0
  1326  06FD  1903               	btfsc	3,2
  1327  06FE  0008               	return
  1328                           
  1329                           ;LCD.c: 203: {
  1330                           ;LCD.c: 204: LCD_DDRAM_Address = ReadLCDAddressCounter();
  1331  06FF  2736  120A  118A   	fcall	_ReadLCDAddressCounter
  1332  0702  00F6               	movwf	WriteStringToLCD@LCD_DDRAM_Address
  1333  0703  01F7               	clrf	WriteStringToLCD@LCD_DDRAM_Address+1
  1334                           
  1335                           ;LCD.c: 244: switch(LCD_DDRAM_Address)
  1336  0704  2F11               	goto	l2921
  1337  0705                     l2915:	
  1338  0705  3001               	movlw	1
  1339  0706  01F3               	clrf	?_GotoYXPositionOnLCD
  1340  0707  272A  120A  118A   	fcall	_GotoYXPositionOnLCD
  1341  070A  2F1E               	goto	l2923
  1342  070B                     l2917:	
  1343  070B  3000               	movlw	0
  1344  070C  01F3               	clrf	?_GotoYXPositionOnLCD
  1345  070D  272A  120A  118A   	fcall	_GotoYXPositionOnLCD
  1346  0710  2F1E               	goto	l2923
  1347  0711                     l2921:	
  1348                           
  1349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1350                           ; Switch size 1, requested type "space"
  1351                           ; Number of cases is 1, Range of values is 0 to 0
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte            4     3 (average)
  1355                           ; direct_byte           11     8 (fixed)
  1356                           ; jumptable            260     6 (fixed)
  1357                           ; rangetable             5     6 (fixed)
  1358                           ; spacedrange            8     9 (fixed)
  1359                           ; locatedrange           1     3 (fixed)
  1360                           ;	Chosen strategy is simple_byte
  1361  0711  0877               	movf	WriteStringToLCD@LCD_DDRAM_Address+1,w
  1362  0712  3A00               	xorlw	0	; case 0
  1363  0713  1903               	skipnz
  1364  0714  2F16               	goto	l2967
  1365  0715  2F1E               	goto	l2923
  1366  0716                     l2967:	
  1367                           
  1368                           ; Switch size 1, requested type "space"
  1369                           ; Number of cases is 2, Range of values is 40 to 104
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            7     4 (average)
  1373                           ; direct_byte          206    11 (fixed)
  1374                           ; jumptable            263     9 (fixed)
  1375                           ;	Chosen strategy is simple_byte
  1376  0716  0876               	movf	WriteStringToLCD@LCD_DDRAM_Address,w
  1377  0717  3A28               	xorlw	40	; case 40
  1378  0718  1903               	skipnz
  1379  0719  2F05               	goto	l2915
  1380  071A  3A40               	xorlw	64	; case 104
  1381  071B  1903               	skipnz
  1382  071C  2F0B               	goto	l2917
  1383  071D  2F1E               	goto	l2923
  1384  071E                     l2923:	
  1385                           
  1386                           ;LCD.c: 252: WriteDataToLCD(*s++);
  1387  071E  0878               	movf	WriteStringToLCD@s,w
  1388  071F  0084               	movwf	4
  1389  0720  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1390  0725  2795  120A  118A   	fcall	_WriteDataToLCD
  1391  0728  0AF8               	incf	WriteStringToLCD@s,f
  1392  0729  2EF5               	goto	l2927
  1393  072A                     __end_of_WriteStringToLCD:	
  1394  072A                     __ptext255:	
  1395 ;; =============== function _ScrollLCD ends ============
  1396                           
  1397                           
  1398 ;; *************** function _GotoYXPositionOnLCD *****************
  1399 ;; Defined at:
  1400 ;;		line 266 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  LineNumber      1    wreg     unsigned char 
  1403 ;;  OFFSET          1    3[COMMON] unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  LineNumber      1    5[COMMON] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         1       0       0       0       0
  1416 ;;      Locals:         1       0       0       0       0
  1417 ;;      Temps:          1       0       0       0       0
  1418 ;;      Totals:         3       0       0       0       0
  1419 ;;Total ram usage:        3 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    3
  1422 ;; This function calls:
  1423 ;;		_WriteCommandToLCD
  1424 ;; This function is called by:
  1425 ;;		_WriteStringToLCD
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429  072A                     _GotoYXPositionOnLCD:	
  1430                           
  1431                           ; Regs used in _GotoYXPositionOnLCD: [wreg+status,2+status,0+pclath+cstack]
  1432                           ;GotoYXPositionOnLCD@LineNumber stored from wreg
  1433  072A  00F5               	movwf	GotoYXPositionOnLCD@LineNumber
  1434                           
  1435                           ;LCD.c: 267: WriteCommandToLCD(0x80|((LineNumber*0x40)+OFFSET));
  1436  072B  00F4               	movwf	??_GotoYXPositionOnLCD
  1437  072C  3006               	movlw	6
  1438  072D                     u465:	
  1439  072D  1003               	clrc
  1440  072E  0DF4               	rlf	??_GotoYXPositionOnLCD,f
  1441  072F  3EFF               	addlw	-1
  1442  0730  1D03               	skipz
  1443  0731  2F2D               	goto	u465
  1444  0732  0873               	movf	GotoYXPositionOnLCD@OFFSET,w
  1445  0733  0774               	addwf	??_GotoYXPositionOnLCD,w
  1446  0734  3880               	iorlw	128
  1447  0735  2EA4               	ljmp	_WriteCommandToLCD
  1448  0736                     __end_of_GotoYXPositionOnLCD:	
  1449  0736                     __ptext259:	
  1450 ;; =============== function _WriteCommandToLCD ends ============
  1451                           
  1452                           
  1453 ;; *************** function _ReadLCDAddressCounter *****************
  1454 ;; Defined at:
  1455 ;;		line 424 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  AddressCount    1    2[COMMON] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      unsigned char 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 60/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       0       0       0       0
  1470 ;;      Locals:         1       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0
  1472 ;;      Totals:         1       0       0       0       0
  1473 ;;Total ram usage:        1 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    1
  1476 ;; This function calls:
  1477 ;;		_Write4BitValueToDataDirBus
  1478 ;; This function is called by:
  1479 ;;		_WriteStringToLCD
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482  0736                     _ReadLCDAddressCounter:	
  1483                           
  1484                           ;LCD.c: 428: Write4BitValueToDataDirBus(0xF);
  1485                           
  1486                           ; Regs used in _ReadLCDAddressCounter: [wreg+status,2+status,0+pclath+cstack]
  1487  0736  300F               	movlw	15
  1488  0737  276B  120A  118A   	fcall	_Write4BitValueToDataDirBus
  1489                           
  1490                           ;LCD.c: 433: RB1 = 1;
  1491  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1492  073B  1486               	bsf	6,1
  1493                           
  1494                           ;LCD.c: 434: RB0 = 0;
  1495  073C  1006               	bcf	6,0
  1496                           
  1497                           ;LCD.c: 436: RB2 = 1;
  1498  073D  1506               	bsf	6,2
  1499                           
  1500                           ;LCD.c: 437: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1501  073E  2F3F               	nop2	;2 cycle nop
  1502  073F  2F40               	nop2	;2 cycle nop
  1503  0740  0064               	clrwdt
  1504                           
  1505                           ;LCD.c: 440: AddressCounter = (RB7 << 7) | (RB6 << 6) | (RB5 << 5) | (RB4 << 4);
  1506  0741  3000               	movlw	0
  1507  0742  27FA               	call	PL4	;select bank 0
  1508  0743  1B86               	btfsc	6,7
  1509  0744  3080               	movlw	128
  1510  0745  1B06               	btfsc	6,6
  1511  0746  3840               	iorlw	64
  1512  0747  1A86               	btfsc	6,5
  1513  0748  3820               	iorlw	32
  1514  0749  1A06               	btfsc	6,4
  1515  074A  3810               	iorlw	16
  1516  074B  00F2               	movwf	ReadLCDAddressCounter@AddressCounter
  1517                           
  1518                           ;LCD.c: 445: RB2 = 0;
  1519  074C  1106               	bcf	6,2
  1520                           
  1521                           ;LCD.c: 446: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1522  074D  2F4E               	nop2	;2 cycle nop
  1523  074E  2F4F               	nop2	;2 cycle nop
  1524  074F  0064               	clrwdt
  1525  0750  27FA               	call	PL4	;select bank 0
  1526                           
  1527                           ;LCD.c: 450: RB2 = 1;
  1528  0751  1506               	bsf	6,2
  1529                           
  1530                           ;LCD.c: 451: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1531  0752  2F53               	nop2	;2 cycle nop
  1532  0753  2F54               	nop2	;2 cycle nop
  1533  0754  0064               	clrwdt
  1534                           
  1535                           ;LCD.c: 453: AddressCounter |= ( (RB7 << 3) | (RB6 << 2) | (RB5 << 1) | (RB4 << 0) );
  1536  0755  3000               	movlw	0
  1537  0756  27FA               	call	PL4	;select bank 0
  1538  0757  1B86               	btfsc	6,7
  1539  0758  3008               	movlw	8
  1540  0759  1B06               	btfsc	6,6
  1541  075A  3804               	iorlw	4
  1542  075B  1A86               	btfsc	6,5
  1543  075C  3802               	iorlw	2
  1544  075D  1A06               	btfsc	6,4
  1545  075E  3801               	iorlw	1
  1546  075F  04F2               	iorwf	ReadLCDAddressCounter@AddressCounter,f
  1547                           
  1548                           ;LCD.c: 455: RB2 = 0;
  1549  0760  1106               	bcf	6,2
  1550                           
  1551                           ;LCD.c: 456: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1552  0761  2F62               	nop2	;2 cycle nop
  1553  0762  2F63               	nop2	;2 cycle nop
  1554  0763  0064               	clrwdt
  1555                           
  1556                           ;LCD.c: 459: Write4BitValueToDataDirBus(0x0);
  1557  0764  3000               	movlw	0
  1558  0765  276B               	fcall	_Write4BitValueToDataDirBus
  1559                           
  1560                           ;LCD.c: 465: AddressCounter &= 0x7F;
  1561  0766  13F2               	bcf	ReadLCDAddressCounter@AddressCounter,7
  1562                           
  1563                           ;LCD.c: 468: RB1 = 0;
  1564  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0768  1086               	bcf	6,1
  1566                           
  1567                           ;LCD.c: 470: return AddressCounter;
  1568  0769  0872               	movf	ReadLCDAddressCounter@AddressCounter,w
  1569  076A  0008               	return
  1570  076B                     __end_of_ReadLCDAddressCounter:	
  1571  076B                     __ptext261:	
  1572 ;; =============== function _LCDIsBusy ends ============
  1573                           
  1574                           
  1575 ;; *************** function _Write4BitValueToDataDirBus *****************
  1576 ;; Defined at:
  1577 ;;		line 370 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  DataDir         1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  DataDir         1    1[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;		None               void
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 60/20
  1589 ;;		Unchanged: FFE00/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0
  1593 ;;      Temps:          1       0       0       0       0
  1594 ;;      Totals:         2       0       0       0       0
  1595 ;;Total ram usage:        2 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_InitLCD
  1601 ;;		_LCDIsBusy
  1602 ;;		_ReadLCDAddressCounter
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605  076B                     _Write4BitValueToDataDirBus:	
  1606                           
  1607                           ; Regs used in _Write4BitValueToDataDirBus: [wreg+status,2+status,0]
  1608                           ;Write4BitValueToDataDirBus@DataDir stored from wreg
  1609  076B  00F1               	movwf	Write4BitValueToDataDirBus@DataDir
  1610                           
  1611                           ;LCD.c: 372: TRISB4 = (((DataDir>>0)&0x1)!=0);
  1612  076C  1C71               	btfss	Write4BitValueToDataDirBus@DataDir,0
  1613  076D  2F71               	goto	u330
  1614  076E  27FD               	call	PL5	;select bank 1
  1615  076F  1606               	bsf	6,4
  1616  0770  2F73               	goto	l2697
  1617  0771                     u330:	
  1618  0771  27FD               	call	PL5	;select bank 1
  1619  0772  1206               	bcf	6,4
  1620  0773                     l2697:	
  1621                           
  1622                           ;LCD.c: 373: TRISB5 = (((DataDir>>1)&0x1)!=0);
  1623  0773  0871               	movf	Write4BitValueToDataDirBus@DataDir,w
  1624  0774  00F0               	movwf	??_Write4BitValueToDataDirBus
  1625  0775  1003               	clrc
  1626  0776  0CF0               	rrf	??_Write4BitValueToDataDirBus,f
  1627  0777  1C70               	btfss	??_Write4BitValueToDataDirBus,0
  1628  0778  2F7C               	goto	u350
  1629  0779  27FD               	call	PL5	;select bank 1
  1630  077A  1686               	bsf	6,5
  1631  077B  2F7E               	goto	u364
  1632  077C                     u350:	
  1633  077C  27FD               	call	PL5	;select bank 1
  1634  077D  1286               	bcf	6,5
  1635  077E                     u364:	
  1636                           
  1637                           ;LCD.c: 374: TRISB6 = (((DataDir>>2)&0x1)!=0);
  1638  077E  27EC  120A  118A   	fcall	PL2	;call to abstracted procedure
  1639  0781  1C70               	btfss	??_Write4BitValueToDataDirBus,0
  1640  0782  2F86               	goto	u370
  1641  0783  27FD               	call	PL5	;select bank 1
  1642  0784  1706               	bsf	6,6
  1643  0785  2F88               	goto	u384
  1644  0786                     u370:	
  1645  0786  27FD               	call	PL5	;select bank 1
  1646  0787  1306               	bcf	6,6
  1647  0788                     u384:	
  1648                           
  1649                           ;LCD.c: 375: TRISB7 = (((DataDir>>3)&0x1)!=0);
  1650  0788  27EC  120A  118A   	fcall	PL2	;call to abstracted procedure
  1651  078B  1003               	clrc
  1652  078C  0CF0               	rrf	??_Write4BitValueToDataDirBus,f
  1653  078D  1C70               	btfss	??_Write4BitValueToDataDirBus,0
  1654  078E  2F92               	goto	u390
  1655  078F  27FD               	call	PL5	;select bank 1
  1656  0790  1786               	bsf	6,7
  1657  0791  0008               	return
  1658  0792                     u390:	
  1659  0792  27FD               	call	PL5	;select bank 1
  1660  0793  1386               	bcf	6,7
  1661  0794  0008               	return
  1662  0795                     __end_of_Write4BitValueToDataDirBus:	
  1663  0795                     __ptext257:	
  1664 ;; =============== function _LCD_Char_build ends ============
  1665                           
  1666                           
  1667 ;; *************** function _WriteDataToLCD *****************
  1668 ;; Defined at:
  1669 ;;		line 40 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  LCDChar         1    wreg     unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  LCDChar         1    2[COMMON] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         1       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         1       0       0       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    2
  1690 ;; This function calls:
  1691 ;;		_LCDIsBusy
  1692 ;;		_Write4BitValueToDataBus
  1693 ;; This function is called by:
  1694 ;;		_WriteStringToLCD
  1695 ;;		_LCD_Char_build
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699  0795                     _WriteDataToLCD:	
  1700                           
  1701                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+pclath+cstack]
  1702                           ;WriteDataToLCD@LCDChar stored from wreg
  1703  0795  00F2               	movwf	WriteDataToLCD@LCDChar
  1704  0796                     l2787:	
  1705                           ;LCD.c: 41: while(LCDIsBusy());
  1706                           
  1707  0796  27BB  120A  118A   	fcall	_LCDIsBusy
  1708  0799  3800               	iorlw	0
  1709  079A  1D03               	skipz
  1710  079B  2F96               	goto	l2787
  1711  079C  27FA               	call	PL4	;select bank 0
  1712                           
  1713                           ;LCD.c: 43: RB1 = 0;
  1714  079D  1086               	bcf	6,1
  1715                           
  1716                           ;LCD.c: 44: RB0 = 1;
  1717  079E  1406               	bsf	6,0
  1718                           
  1719                           ;LCD.c: 47: Write4BitValueToDataBus(LCDChar>>4);
  1720  079F  0E72               	swapf	WriteDataToLCD@LCDChar,w
  1721  07A0  390F               	andlw	15
  1722  07A1  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
  1723                           
  1724                           ;LCD.c: 52: RB2 = 1;
  1725  07A4  1506               	bsf	6,2
  1726                           
  1727                           ;LCD.c: 53: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1728  07A5  2FA6               	nop2	;2 cycle nop
  1729  07A6  2FA7               	nop2	;2 cycle nop
  1730  07A7  0064               	clrwdt
  1731  07A8  27FA               	call	PL4	;select bank 0
  1732                           
  1733                           ;LCD.c: 54: RB2 = 0;
  1734  07A9  1106               	bcf	6,2
  1735                           
  1736                           ;LCD.c: 55: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1737  07AA  2FAB               	nop2	;2 cycle nop
  1738  07AB  2FAC               	nop2	;2 cycle nop
  1739  07AC  0064               	clrwdt
  1740                           
  1741                           ;LCD.c: 59: Write4BitValueToDataBus(LCDChar);
  1742  07AD  0872               	movf	WriteDataToLCD@LCDChar,w
  1743  07AE  26CA  120A  118A   	fcall	_Write4BitValueToDataBus
  1744                           
  1745                           ;LCD.c: 61: RB2 = 1;
  1746  07B1  1506               	bsf	6,2
  1747                           
  1748                           ;LCD.c: 62: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1749  07B2  2FB3               	nop2	;2 cycle nop
  1750  07B3  2FB4               	nop2	;2 cycle nop
  1751  07B4  0064               	clrwdt
  1752  07B5  27FA               	call	PL4	;select bank 0
  1753                           
  1754                           ;LCD.c: 63: RB2 = 0;
  1755  07B6  1106               	bcf	6,2
  1756                           
  1757                           ;LCD.c: 64: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1758  07B7  2FB8               	nop2	;2 cycle nop
  1759  07B8  2FB9               	nop2	;2 cycle nop
  1760  07B9  0064               	clrwdt
  1761  07BA  0008               	return
  1762  07BB                     __end_of_WriteDataToLCD:	
  1763  07BB                     __ptext260:	
  1764 ;; =============== function _ReadLCDAddressCounter ends ============
  1765                           
  1766                           
  1767 ;; *************** function _LCDIsBusy *****************
  1768 ;; Defined at:
  1769 ;;		line 301 in file "C:\Users\Saeed\Desktop\PIC16F877 LCD Code\Code\LCD.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      unsigned char 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		_Write4BitValueToDataDirBus
  1792 ;; This function is called by:
  1793 ;;		_WriteCommandToLCD
  1794 ;;		_WriteDataToLCD
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797  07BB                     _LCDIsBusy:	
  1798                           
  1799                           ;LCD.c: 303: Write4BitValueToDataDirBus(0xF);
  1800                           
  1801                           ; Regs used in _LCDIsBusy: [wreg+status,2+status,0+pclath+cstack]
  1802  07BB  300F               	movlw	15
  1803  07BC  276B  120A  118A   	fcall	_Write4BitValueToDataDirBus
  1804                           
  1805                           ;LCD.c: 308: RB1 = 1;
  1806  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1807  07C0  1486               	bsf	6,1
  1808                           
  1809                           ;LCD.c: 309: RB0 = 0;
  1810  07C1  1006               	bcf	6,0
  1811                           
  1812                           ;LCD.c: 311: RB2 = 1;
  1813  07C2  1506               	bsf	6,2
  1814                           
  1815                           ;LCD.c: 312: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1816  07C3  2FC4               	nop2	;2 cycle nop
  1817  07C4  2FC5               	nop2	;2 cycle nop
  1818  07C5  0064               	clrwdt
  1819  07C6  27FA               	call	PL4	;select bank 0
  1820                           
  1821                           ;LCD.c: 314: if( RB7 )
  1822  07C7  1F86               	btfss	6,7
  1823  07C8  2FD8               	goto	l714
  1824                           
  1825                           ;LCD.c: 315: {
  1826                           ;LCD.c: 316: RB2 = 0;
  1827  07C9  1106               	bcf	6,2
  1828                           
  1829                           ;LCD.c: 317: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1830  07CA  2FCB               	nop2	;2 cycle nop
  1831  07CB  2FCC               	nop2	;2 cycle nop
  1832  07CC  0064               	clrwdt
  1833  07CD  27FA               	call	PL4	;select bank 0
  1834                           
  1835                           ;LCD.c: 320: RB2 = 1;
  1836  07CE  1506               	bsf	6,2
  1837                           
  1838                           ;LCD.c: 321: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1839  07CF  2FD0               	nop2	;2 cycle nop
  1840  07D0  2FD1               	nop2	;2 cycle nop
  1841  07D1  0064               	clrwdt
  1842  07D2  27FA               	call	PL4	;select bank 0
  1843                           
  1844                           ;LCD.c: 323: RB2 = 0;
  1845  07D3  1106               	bcf	6,2
  1846                           
  1847                           ;LCD.c: 324: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1848  07D4  2FD5               	nop2	;2 cycle nop
  1849  07D5  2FD6               	nop2	;2 cycle nop
  1850  07D6  0064               	clrwdt
  1851                           
  1852                           ;LCD.c: 326: return 1;
  1853  07D7  3401               	retlw	1
  1854  07D8                     l714:	
  1855                           
  1856                           ;LCD.c: 327: }
  1857                           ;LCD.c: 329: RB2 = 0;
  1858  07D8  1106               	bcf	6,2
  1859                           
  1860                           ;LCD.c: 330: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1861  07D9  2FDA               	nop2	;2 cycle nop
  1862  07DA  2FDB               	nop2	;2 cycle nop
  1863  07DB  0064               	clrwdt
  1864  07DC  27FA               	call	PL4	;select bank 0
  1865                           
  1866                           ;LCD.c: 334: RB2 = 1;
  1867  07DD  1506               	bsf	6,2
  1868                           
  1869                           ;LCD.c: 335: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1870  07DE  2FDF               	nop2	;2 cycle nop
  1871  07DF  2FE0               	nop2	;2 cycle nop
  1872  07E0  0064               	clrwdt
  1873  07E1  27FA               	call	PL4	;select bank 0
  1874                           
  1875                           ;LCD.c: 337: RB2 = 0;
  1876  07E2  1106               	bcf	6,2
  1877                           
  1878                           ;LCD.c: 338: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1879  07E3  2FE4               	nop2	;2 cycle nop
  1880  07E4  2FE5               	nop2	;2 cycle nop
  1881  07E5  0064               	clrwdt
  1882                           
  1883                           ;LCD.c: 341: Write4BitValueToDataDirBus(0x0);
  1884  07E6  3000               	movlw	0
  1885  07E7  276B               	fcall	_Write4BitValueToDataDirBus
  1886                           
  1887                           ;LCD.c: 348: RB1 = 0;
  1888  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1889  07E9  3000               	movlw	0
  1890  07EA  1086               	bcf	6,1
  1891                           
  1892                           ;LCD.c: 350: return 0;
  1893  07EB  0008               	return
  1894  07EC                     __end_of_LCDIsBusy:	
  1895  07EC                     PL2:	
  1896  07EC  0871               	movf	Write4BitValueToDataDirBus@DataDir,w
  1897  07ED  00F0               	movwf	??_Write4BitValueToDataDirBus
  1898  07EE  1003               	clrc
  1899  07EF  0CF0               	rrf	??_Write4BitValueToDataDirBus,f
  1900  07F0  1003               	clrc
  1901  07F1  0CF0               	rrf	??_Write4BitValueToDataDirBus,f
  1902  07F2  0008               	return
  1903  07F3                     PL3:	
  1904  07F3  0871               	movf	Write4BitValueToDataBus@Data,w
  1905  07F4  00F0               	movwf	??_Write4BitValueToDataBus
  1906  07F5  1003               	clrc
  1907  07F6  0CF0               	rrf	??_Write4BitValueToDataBus,f
  1908  07F7  1003               	clrc
  1909  07F8  0CF0               	rrf	??_Write4BitValueToDataBus,f
  1910  07F9  0008               	return
  1911  07FA                     PL4:	
  1912  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  1913  07FB  1303               	bcf	3,6	;RP1=0, select bank0
  1914  07FC  0008               	return
  1915  07FD                     PL5:	
  1916  07FD  1683               	bsf	3,5	;RP0=1, select bank1
  1917  07FE  1303               	bcf	3,6	;RP1=0, select bank1
  1918  07FF  0008               	return
  1919                           
  1920                           	psect	text263
  1921  0000                     __ptext263:	
  1922 ;; =============== function _Write4BitValueToDataBus ends ============
  1923                           
  1924  007E                     btemp	set	126	;btemp
  1925  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Nov 25 00:11:27 2012

                                  pc 0002                                   fsr 0004  
             ?_ReadLCDAddressCounter 0070                                  l721 0000  
                                l714 07D8                                  l730 0000  
                                l718 0000                                  l727 0000  
                                l680 0000                                  l736 0000  
                                l674 0000                                  l683 0000  
                                l693 0000                                  l699 0000  
                                _RB0 0030                                  _RB1 0031  
                                _RB2 0032                                  _RB4 0034  
                                _RB5 0035                                  _RB6 0036  
                                _RB7 0037                                  u310 06F1  
                                u304 06E7                                  u250 06D0  
                                u330 0771                                  u270 06DB  
                                u350 077C                                  u290 06E5  
                                u370 0786                                  u507 05B6  
                                u284 06DD                                  u364 077E  
                                u517 05F1                                  u390 0792  
                                u527 0609                                  u384 0788  
                                u465 072D                                  u537 061C  
                                u547 0632                                  u497 05A0  
                                fsr0 0004                                  indf 0000  
                    ?_LCD_Char_build 0073          Write4BitValueToDataBus@Data 0071  
                               l2701 0000                                 l2703 0000  
                               l2721 0000                                 l2713 0000  
                               l2705 0000                                 l2801 0000  
                               l2707 0000                                 l2731 0000  
                               l2803 0000                                 l2811 0000  
                               l2717 0000                                 l2709 0000  
                               l2741 0000                                 l2733 0000  
                               l2725 0000                                 l2805 0000  
                               l2821 0000                                 l2901 0000  
                               l2719 0000                                 l2751 0000  
                               l2743 0000                                 l2735 0000  
                               l2727 0000                                 l2823 06A2  
                               l2807 0000                                 l2831 0000  
                               l2903 0000                                 l2911 0000  
                               l2753 0000                                 l2745 0000  
                               l2737 0000                                 l2729 0000  
                               l2817 0694                                 l2825 0000  
                               l2833 05C0                                 l2905 0000  
                               l2841 0000                                 l2921 0711  
                               l2691 0000                                 l2755 0000  
                               l2747 0000                                 l2739 0000  
                               l2771 0000                                 l2763 0000  
                               l2819 0000                                 l2827 0000  
                               l2907 0000                                 l2851 0000  
                               l2843 0000                                 l2835 0000  
                               l2923 071E                                 l2915 0705  
                               l2693 06D2                                 l2757 0000  
                               l2749 0000                                 l2781 0000  
                               l2773 0000                                 l2765 06A5  
                               l2909 0000                                 l2861 0000  
                               l2853 0000                                 l2845 0000  
                               l2837 0000                                 l2925 0000  
                               l2917 070B                                 l2941 0000  
                               l2933 0000                                 l2695 0000  
                               l2759 0000                                 l2783 0000  
                               l2775 0000                                 l2767 0000  
                               l2791 0000                                 l2871 0000  
                               l2863 0000                                 l2855 0000  
                               l2847 0000                                 l2839 0000  
                               l2927 06F5                                 l2943 05A7  
                               l2935 0000                                 l2697 0773  
                               l2777 0000                                 l2769 0000  
                               l2793 0000                                 l2785 0000  
                               l2881 0000                                 l2873 0000  
                               l2865 0000                                 l2857 0000  
                               l2849 0000                                 l2945 0000  
                               l2937 0000                                 l2699 0000  
                               l2779 0000                                 l2795 0000  
                               l2787 0796                                 l2891 0000  
                               l2883 0000                                 l2875 0000  
                               l2867 0000                                 l2859 0000  
                               l2939 0000                                 l2797 0000  
                               l2789 0000                                 l2893 0000  
                               l2885 0000                                 l2877 0000  
                               l2869 0000                                 l2799 0000  
                               l2895 0000                                 l2887 0000  
                               l2879 0000                                 l2967 0716  
                               l2897 0000                                 l2889 0000  
                               l2899 0000                                 STR_1 0009  
            _Write4BitValueToDataBus 06CA                   __size_of_LCDIsBusy 0031  
                               _main 057B                                 btemp 007E  
                               start 0000                      __end_of_InitLCD 0682  
       __size_of_GotoYXPositionOnLCD 000C                                ?_main 0070  
                              pclath 000A                                status 0003  
            __size_of_WriteDataToLCD 0026                                wtemp0 007E  
                       __end_of_main 05BE   __end_of_Write4BitValueToDataDirBus 0795  
         _Write4BitValueToDataDirBus 076B                               ??_main 007A  
                  __end_of_LCDIsBusy 07EC            ??_Write4BitValueToDataBus 0070  
                         ScrollLCD@i 0078                               _TRISB0 0430  
                             _TRISB1 0431                               _TRISB2 0432  
                             _TRISB4 0434                               _TRISB5 0435  
                             _TRISB6 0436                               _TRISB7 0437  
                          ??_InitLCD 0077                   __size_of_ScrollLCD 001B  
                  WriteStringToLCD@s 0078                    ?_WriteStringToLCD 0070  
                 ??_WriteStringToLCD 0076      __end_of_Write4BitValueToDataBus 06F4  
                     __pcstackCOMMON 0070                         __pidataBANK0 053B  
            ??_ReadLCDAddressCounter 0072                     ??_LCD_Char_build 0074  
           WriteCommandToLCD@Command 0072                  _GotoYXPositionOnLCD 072A  
                  __end_of_ScrollLCD 05D9                       _WriteDataToLCD 0795  
                         __pmaintext 057B                 ?_GotoYXPositionOnLCD 0073  
              WriteDataToLCD@LCDChar 0072                 ScrollLCD@RightOrLeft 0073  
       ??_Write4BitValueToDataDirBus 0070                     _CustomCharacter1 0020  
                   _CustomCharacter2 0028                     _CustomCharacter3 0030  
                   _CustomCharacter4 0038                     _CustomCharacter5 0040  
                   _CustomCharacter6 0048                     _CustomCharacter7 0050  
                   _CustomCharacter8 0058               __end_of_WriteDataToLCD 07BB  
                            _InitLCD 05D9                ??_GotoYXPositionOnLCD 0074  
                          _LCDIsBusy 07BB                 end_of_initialization 0526  
                    ?_WriteDataToLCD 0070                              init_ram 052E  
  WriteStringToLCD@LCD_DDRAM_Address 0076                           ?_LCDIsBusy 0070  
                 ScrollLCD@ByHowMuch 0074            __size_of_WriteStringToLCD 0036  
      GotoYXPositionOnLCD@LineNumber 0075       __size_of_ReadLCDAddressCounter 0035  
      __end_of_ReadLCDAddressCounter 076B             ?_Write4BitValueToDataBus 0070  
                start_initialization 051A                            _ScrollLCD 05BE  
          GotoYXPositionOnLCD@OFFSET 0073                          __pdataBANK0 0020  
                        ??_LCDIsBusy 0072  ReadLCDAddressCounter@AddressCounter 0072  
                           ?_InitLCD 0070                           ?_ScrollLCD 0073  
                          __ptext260 07BB                            __ptext252 06F4  
                          __ptext261 076B                            __ptext253 05D9  
                          __ptext262 06CA                            __ptext254 05BE  
                          __ptext263 0000                            __ptext255 072A  
                          __ptext256 0682                            __ptext257 0795  
                          __ptext258 06A4                            __ptext259 0736  
             LCD_Char_build@location 0075                            __pstrings 0003  
                   ??_WriteDataToLCD 0072                      LCD_Char_build@i 0076  
            __size_of_LCD_Char_build 0022          __end_of_GotoYXPositionOnLCD 0736  
                   _WriteStringToLCD 06F4              ScrollLCD@ScreenOrCursor 0077  
                        __stringbase 0008    Write4BitValueToDataDirBus@DataDir 0071  
                  _WriteCommandToLCD 06A4                   ?_WriteCommandToLCD 0070  
                   __size_of_InitLCD 00A9                          ??_ScrollLCD 0075  
                          init_fetch 052A                  ??_WriteCommandToLCD 0072  
        ?_Write4BitValueToDataDirBus 0070                    LCD_Char_build@ptr 0073  
          __end_of_WriteCommandToLCD 06CA     __size_of_Write4BitValueToDataBus 002A  
                      __size_of_main 0043                _ReadLCDAddressCounter 0736  
                     _LCD_Char_build 0682                            stringcode 0003  
           __end_of_WriteStringToLCD 072A                             stringdir 0003  
                           stringtab 0003               __end_of_LCD_Char_build 06A4  
         __size_of_WriteCommandToLCD 0026  __size_of_Write4BitValueToDataDirBus 002A  
